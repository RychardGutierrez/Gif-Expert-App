{"version":3,"sources":["GifExpert/components/AddCategory/index.jsx","Api/GifExpert/index.js","Api/Urls/index.js","GifExpert/components/GifGridItem/index.jsx","GifExpert/components/GifGrid/index.jsx","hooks/useFetchGifs.js","GifExpert/containers/GifExpertApp/index.jsx","index.js"],"names":["Index","inputText","handleInputChange","type","value","onChange","fetchApi","url","a","console","log","fetch","result","json","muteitorData","data","map","img","id","title","images","downsized_medium","getGif","search","encodeURI","resultData","index","className","src","alt","category","useState","loading","state","setState","getGifApi","useCallback","useEffect","useFetchGifs","image","GifGridItem","categories","setCategories","setInputText","isValueEmpy","length","onSubmit","e","preventDefault","AddCategory","target","nameCategorie","GifGrid","ReactDOM","render","StrictMode","GifExpertApp","document","getElementById"],"mappings":"4MAoBeA,EAlBD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,kBAC1B,OACE,qCACE,8CACA,uBACEC,KAAK,OACLC,MAAOH,EACPI,SAAUH,Q,+BCPZI,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfC,QAAQC,IAAIH,GADG,SAEMI,MAAMJ,GAFZ,cAETK,EAFS,gBAGFA,EAAOC,OAHL,mFAAH,sDAMRC,EAAe,SAACC,GAQpB,OAPoBA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EAClC,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,SAMlCe,EAAM,uCAAG,WAAOC,GAAP,qBAAAf,EAAA,6DACPD,EADO,UCnBC,gFDmBD,cACeiB,UAAUD,GADzB,sBAEUjB,EAASC,GAFnB,uBAELQ,EAFK,EAELA,KACFU,EAAaX,EAAaC,GAHnB,kBAINU,GAJM,2CAAH,sDERGC,EATD,SAAC,GAAoB,IAAlBP,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IACtB,OACE,sBAAKoB,UAAU,OAAf,UACE,qBAAKC,IAAKrB,EAAKsB,IAAKV,IACpB,4BAAIA,QCoBKnB,EAtBD,SAAC,GAAkB,IAAhB8B,EAAe,EAAfA,SAAe,ECDJ,SAACA,GAAc,IAAD,EACdC,mBAAS,CACjChB,KAAM,GACNiB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAMlCC,EAAYC,sBAAW,sBAC3B,sBAAA5B,EAAA,kEACE0B,EADF,SAEgBZ,EAAOQ,GAFvB,yBAEIf,KAFJ,KAGIiB,SAAS,IAHb,yDAKG,CAACE,EAAUJ,IAOhB,OAJAO,qBAAU,WACNF,MACD,CAACA,IAEGF,EDjB2BK,CAAaR,GAAjCV,EADgB,EACtBL,KAAciB,EADQ,EACRA,QAEtB,OACE,qCACE,6BAAKF,IACJE,GAAW,mBAAGL,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEIP,EAAOJ,KAAI,SAACuB,GACV,OAAO,cAACC,EAAD,eAEDD,GAFC,OACAA,QADA,IACAA,OADA,EACAA,EAAOrB,aEmCXlB,EA9CD,WAAM,MAEkB+B,mBAAS,CAAC,cAF5B,mBAEXU,EAFW,KAECC,EAFD,OAGgBX,mBAAS,IAHzB,mBAGX9B,EAHW,KAGA0C,EAHA,KAmBZC,EAAc,SAACxC,GACnB,OAAOA,EAAMyC,QAAU,GAGzB,OACE,uBAAMC,SAba,SAACC,GAEpB,OADAA,EAAEC,iBACEJ,EAAY3C,GACPQ,QAAQC,IAAI,cARrBgC,EAAc,CAACzC,GAAF,mBAAgBwC,KAWtBE,EAAa,MAOpB,UACE,8CACA,uBACA,cAACM,EAAD,CACEhD,UAAWA,EACXC,kBArBoB,SAAC6C,GACzBJ,EAAaI,EAAEG,OAAO9C,UAsBpB,6BAEIqC,EAAWzB,KAAI,SAACmC,GACd,OAAO,cAACC,EAAD,CAELtB,SAAUqB,GADLA,Y,YCjCnBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14260df6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nconst Index = ({ inputText, handleInputChange }) => {\n  return (\n    <>\n      <h2>Add Category</h2>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={handleInputChange}\n      />\n    </>\n  )\n}\n\nIndex.propTypes = {\n  inputText: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired\n}\n\nexport default Index;\n\n","import { pathGif } from '../Urls';\n\nconst fetchApi = async (url) => {\n  console.log(url);\n  const result = await fetch(url);\n  return await result.json();\n};\n\nconst muteitorData = (data) => {\n  const muteitorGif = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n  return muteitorGif;\n}\n\nconst getGif = async (search) => {\n  const url = `${pathGif}&q=${encodeURI(search)}&limit=10`;\n  const { data } = await fetchApi(url);\n  const resultData = muteitorData(data);\n  return resultData;\n}\n\nexport { getGif }","const pathGif = 'https://api.giphy.com/v1/gifs/search?api_key=gsv12CtjRun1bAho0WX1RCPsU180olFq';\n\n\nexport { pathGif }","import React from 'react'\n\nconst index = ({ title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default index;\n","import React from 'react'\nimport { useFetchGifs } from \"../../../hooks/useFetchGifs\";\nimport GifGridItem from \"../GifGridItem\";\n\nconst Index = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n      <div className=\"card-grid\">\n        {\n          images.map((image) => {\n            return <GifGridItem\n              key={image?.id}\n              {...image}\n            />\n          })\n        }\n      </div>\n    </>\n  )\n}\n\n\nexport default Index;","import { useEffect, useState, useCallback } from \"react\";\nimport { getGif } from \"../Api/GifExpert\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  const getGifApi = useCallback(\n    async () => {\n      setState({\n        data: await getGif(category),\n        loading: false,\n      });\n    }, [setState, category]\n  )\n\n  useEffect(() => {\n      getGifApi();\n  }, [getGifApi])\n\n  return state;\n}","import React, { useState } from 'react';\nimport AddCategory from \"../../components/AddCategory\";\nimport GifGrid from \"../../components/GifGrid\";\n\nconst Index = () => {\n  // const categories = ['One Punch', 'Samurai X', 'Dragon ball']\n  const [categories, setCategories] = useState(['One Punch']);\n  const [inputText, setInputText] = useState('');\n\n  const handleAddCategorie = () => {\n    setCategories([inputText, ...categories])\n  }\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isValueEmpy(inputText)) {\n      return console.log(\"text empy\");\n    }\n    handleAddCategorie();\n    return setInputText('');\n  }\n  const isValueEmpy = (value) => {\n    return value.length <= 3;\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategory\n        inputText={inputText}\n        handleInputChange={handleInputChange}\n      />\n      <ol>\n        {\n          categories.map((nameCategorie) => {\n            return <GifGrid\n              key={nameCategorie}\n              category={nameCategorie}\n            />\n            //key don't cant key of map\n          })\n        }\n      </ol>\n    </form>\n  )\n}\n\nexport default Index;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpert/containers/GifExpertApp\";\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}